/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package booklist;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    boolean AddNew = true;
    String filename = "book.txt";
    DefaultListModel<String> list = new DefaultListModel<>();
    ArrayList<book> dsBook = new ArrayList<>();

    public Home() {
        initComponents();
        loadPubYear();
        loadBook();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstBook = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ckbRent = new javax.swing.JCheckBox();
        txtCode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtPublisher = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        cbxYear = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstBookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstBook);

        jLabel1.setText("Book Code:");

        jLabel2.setText("Book Name:");

        jLabel3.setText("Author:");

        jLabel4.setText("Publisher:");

        jLabel5.setText("Published Year:");

        ckbRent.setText("For Rent");

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCode)
                            .addComponent(txtName)
                            .addComponent(txtAuthor)
                            .addComponent(txtPublisher))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckbRent)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbxYear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cbxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ckbRent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew)
                            .addComponent(btnSave)
                            .addComponent(btnRemove)
                            .addComponent(btnExit))
                        .addGap(30, 30, 30))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int confirm(String code) {
        for (int i = 0; i < dsBook.size(); i++) {
            if (code.compareTo(dsBook.get(i).getCode()) == 0) {
                return i;
            }
        }
        return -1;
    }

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        AddNew = true;
        this.btnSave.setText("Save");
        this.txtCode.setText("");
        this.txtName.setText("");
        this.txtAuthor.setText("");
        this.txtPublisher.setText("");
        this.cbxYear.setSelectedIndex(0);
        this.ckbRent.setSelected(false);
    }//GEN-LAST:event_btnNewActionPerformed

    private void lstBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstBookMouseClicked

        int pos = this.lstBook.getSelectedIndex();
        if (pos >= 0) {
            this.btnSave.setText("Update");
            this.AddNew = false;
            this.txtCode.setText(this.dsBook.get(pos).getCode());
            this.txtName.setText(this.dsBook.get(pos).getName());
            this.txtAuthor.setText(this.dsBook.get(pos).getAuthor());
            this.txtPublisher.setText(this.dsBook.get(pos).getPublisher());
            String pubYear = this.dsBook.get(pos).getPublishYear();
            for (int i = 0; i < this.cbxYear.getItemCount(); i++) {
                if (pubYear.compareTo((String) this.cbxYear.getItemAt(i)) == 0) {
                    this.cbxYear.setSelectedIndex(i);
                }
            }
            if (this.dsBook.get(pos).isForRen() == true) {
                this.ckbRent.setSelected(true);
            } else {
                this.ckbRent.setSelected(false);
            }
            this.txtCode.setEditable(false);
            this.txtCode.setBackground(Color.LIGHT_GRAY);
        }

    }//GEN-LAST:event_lstBookMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (AddNew == true) {//nếu addnew = true, tạo mới 1 book
            boolean check = true;
            String code = this.txtCode.getText();
            String name = this.txtName.getText();
            String author = this.txtAuthor.getText();
            String pub = this.txtPublisher.getText();
            String PubYear = (String) this.cbxYear.getSelectedItem();
            boolean chk = this.ckbRent.isSelected();
            if (code.compareTo("") == 0 || name.compareTo("") == 0 || author.compareTo("") == 0 || pub.compareTo("") == 0) {
                JOptionPane.showMessageDialog(this, "Please enter full information");
                check = false;
                return;
            }
            if (confirm(code) >= 0) {
                JOptionPane.showMessageDialog(this, "The code has existed");
                check = false;
                return;
            }
            if (check == true) {
                dsBook.add(new book(code, name, author, pub, PubYear, chk));
            }
            this.list.addElement(name);
            this.lstBook.updateUI();
            AddNew = false;
        } else//ngược lại, cập nhật book
        {

            String name = this.txtName.getText();
            String author = this.txtAuthor.getText();
            String pub = this.txtPublisher.getText();
            String PubYear = (String) this.cbxYear.getSelectedItem();
            boolean chk = this.ckbRent.isSelected();
            int pos = this.lstBook.getSelectedIndex();
            this.dsBook.get(pos).setName(name);
            this.dsBook.get(pos).setAuthor(author);
            this.dsBook.get(pos).setPublisher(pub);
            this.dsBook.get(pos).setPublishYear(PubYear);
            if (chk == true) {
                this.dsBook.get(pos).setForRen(true);
            } else {
                this.dsBook.get(pos).setForRen(false);
            }
            
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int pos = this.lstBook.getSelectedIndex();
        if (pos >= 0) {
            int check = JOptionPane.showConfirmDialog(this, "Are you sure to remove this book?", "Please confirm", JOptionPane.YES_NO_OPTION);
            if (check == JOptionPane.YES_OPTION) {
                DefaultListModel model = (DefaultListModel) this.lstBook.getModel();
                model.remove(pos);
                this.dsBook.remove(pos);
                this.lstBook.updateUI();
                JOptionPane.showMessageDialog(this, "Remove complete");
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed


    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        try {
            JFileChooser dlg = new JFileChooser();
            int result = dlg.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File f = dlg.getSelectedFile();
                FileWriter fw = new FileWriter(f);
                BufferedWriter b = new BufferedWriter(fw);
                for (int i = 0; i < dsBook.size(); i++) {
                    String s = dsBook.get(i).getCode() + ";" + dsBook.get(i).getName() + ";" + dsBook.get(i).getAuthor() + ";" + dsBook.get(i).getPublisher() + ";" + dsBook.get(i).getPublishYear() + ";" + dsBook.get(i).isForRen() + "\n";
                    b.write(s);
                }
                b.close();
                fw.close();
                JOptionPane.showMessageDialog(this, "Data has been saved complete");
            }

            this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    public javax.swing.JComboBox cbxYear;
    private javax.swing.JCheckBox ckbRent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstBook;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPublisher;
    // End of variables declaration//GEN-END:variables

    private void loadPubYear() {

        for (int i = 1900; i < 2019; i++) {
            this.cbxYear.addItem("" + i);
        }

    }

    private void loadBook() {
//        try {
//            FileReader f = new FileReader(filename);
//            BufferedReader b = new BufferedReader(f);
//            while (b.ready()) {
//                boolean rent = true;
//                String s = b.readLine();
//                String arr[] = s.split(";");
//                if (arr.length == 6) {
//                    String code = arr[0];
//                    String name = arr[1];
//                    String author = arr[2];
//                    String pub = arr[3];
//                    String pubYear = arr[4];
//                    if (arr[5].compareTo("true") == 0) {
//                        rent = true;
//                    } else {
//                        rent = false;
//                    }
//                    this.dsBook.add(new book(code, name, author, pub, pubYear, rent));
//                    this.list.addElement(name);
//
//                }
//            }
//            this.lstBook.setModel(list);
//            
//            
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
        try {
            FileReader f = new FileReader(filename);
            BufferedReader bf = new BufferedReader(f);
            while (bf.ready()) {
                String s = bf.readLine();
                StringTokenizer stk = new StringTokenizer(s, ";");
                boolean rent = true;
                String code = stk.nextToken().trim();
                String name = stk.nextToken().trim();
                String author = stk.nextToken().trim();
                String publisher = stk.nextToken().trim();
                String published_year = stk.nextToken().trim();
                String rt = stk.nextToken();
                if (rt.compareTo("true") == 0) {
                    rent = true;
                } else {
                    rent = false;
                }
                this.dsBook.add(new book(code, name, author, publisher, published_year, rent));
                this.list.addElement(name);
            }
            this.lstBook.setModel(list);
            bf.close();
            f.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
